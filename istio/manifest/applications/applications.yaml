apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: details
    name: details
    namespace: cks
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: details
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: details
      spec:
        containers:
        - env:
          - name: ENABLE_EXTERNAL_BOOK_SERVICE
            value: "true"
          - name: DO_NOT_ENCRYPT
            value: "false"
          image: saifsust/details:istio
          imagePullPolicy: Always
          name: details
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ratings
      version: v1
    name: ratings-v1
    namespace: cks
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: ratings
        version: v1
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ratings
          version: v1
      spec:
        containers:
        - image: saifsust/ratings:istio
          imagePullPolicy: Always
          name: ratings-v1
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ratings-v2
    name: ratings-v2
    namespace: cks
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ratings-v2
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ratings-v2
      spec:
        containers:
        - env:
          - name: SERVICE_VERSION
            value: v2
          - name: DB_TYPE
            value: mysql
          - name: MYSQL_DB_HOST
            value: mysql-svc.cassandra.svc.cluster.local
          - name: MYSQL_DB_PORT
            value: "3306"
          - name: MYSQL_DB_USER
            value: root
          - name: MYSQL_DB_PASSWORD
            value: password
          image: saifsust/ratings:istio
          imagePullPolicy: Always
          name: ratings-v2
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: ratings-v3
    name: ratings-v3
    namespace: cks
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: ratings-v3
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ratings-v3
      spec:
        containers:
        - env:
          - name: SERVICE_VERSION
            value: v2
          - name: MONGO_DB_URL
            value: mongodb://mongodb-svc.cassandra.svc.cluster.local:27017/test
          image: saifsust/ratings:istio
          imagePullPolicy: Always
          name: ratings-v3
          ports:
          - containerPort: 9080
            protocol: TCP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: reviews-v1
    name: reviews-v1
    namespace: cks
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: reviews-v1
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: reviews-v1
      spec:
        containers:
        - env:
          - name: ENABLE_RATINGS
            value: "false"
          image: saifsust/reviews:istio
          imagePullPolicy: Always
          name: reviews
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: reviews-v2
    name: reviews-v2
    namespace: cks
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: reviews-v2
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: reviews-v2
      spec:
        containers:
        - env:
          - name: ENABLE_RATINGS
            value: "true"
          - name: STAR_COLOR
            value: red
          - name: RATINGS_HOSTNAME
            value: ratings-v3-svc
          - name: SERVICES_DOMAIN
            value: cks.svc.cluster.local
          - name: RATINGS_SERVICE_PORT
            value: "9080"
          image: saifsust/reviews:istio
          imagePullPolicy: Always
          name: reviews
          ports:
          - containerPort: 9080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: details
    name: details-svc
    namespace: cks
  spec:
    ports:
    - port: 9080
      protocol: TCP
      targetPort: 9080
    selector:
      app: details
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ratings
      version: v1
    name: ratings-v1-svc
    namespace: cks
  spec:
    ports:
    - port: 9080
      protocol: TCP
      targetPort: 9080
    selector:
      app: ratings
      version: v1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ratings-v2
    name: ratings-v2-svc
    namespace: cks
  spec:
    ports:
    - port: 9080
      protocol: TCP
      targetPort: 9080
    selector:
      app: ratings-v2
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ratings-v3
    name: ratings-v3-svc
    namespace: cks
  spec:
    ports:
    - port: 9080
      protocol: TCP
      targetPort: 9080
    selector:
      app: ratings-v3
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: reviews-v1
    name: reviews-v1-svc
    namespace: cks
  spec:
    ports:
    - port: 9080
      protocol: TCP
      targetPort: 9080
    selector:
      app: reviews-v1
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: reviews-v2
    name: reviews-v2-svc
    namespace: cks
  spec:
    ports:
    - port: 9080
      protocol: TCP
      targetPort: 9080
    selector:
      app: reviews-v2
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: cilium.io/v2
  kind: CiliumNetworkPolicy
  metadata:
    name: allow-dns
    namespace: cks
  spec:
    egress:
    - toEndpoints:
      - matchLabels:
          io.kubernetes.pod.namespace: kube-system
          k8s-app: kube-dns
      toPorts:
      - ports:
        - port: "53"
          protocol: ANY
    endpointSelector: {}
- apiVersion: cilium.io/v2
  kind: CiliumNetworkPolicy
  metadata:
    name: allow-ratings-v2-from-reviews-v2
    namespace: cks
  spec:
    endpointSelector:
      matchLabels:
        app: ratings-v3
    ingress:
    - fromEndpoints:
      - matchLabels:
          app: reviews-v2
- apiVersion: cilium.io/v2
  kind: CiliumNetworkPolicy
  metadata:
    name: allow-ratings-v2-to-mysql
    namespace: cks
  spec:
    egress:
    - toEndpoints:
      - matchLabels:
          app: mysql-server
          io.kubernetes.pod.namespace: cassandra
      toPorts:
      - ports:
        - port: "3306"
          protocol: TCP
    endpointSelector:
      matchLabels:
        app: ratings-v2
- apiVersion: cilium.io/v2
  kind: CiliumNetworkPolicy
  metadata:
    name: allow-ratings-v3-to-mongodb
    namespace: cks
  spec:
    egress:
    - toEndpoints:
      - matchLabels:
          app: mongodb
          io.kubernetes.pod.namespace: cassandra
      toPorts:
      - ports:
        - port: "27017"
          protocol: TCP
    endpointSelector:
      matchLabels:
        app: ratings-v3
- apiVersion: cilium.io/v2
  kind: CiliumNetworkPolicy
  metadata:
    name: allow-reviews-v2-to-ratings-v3
    namespace: cks
  spec:
    egress:
    - toEndpoints:
      - matchLabels:
          app: ratings-v3
      toPorts:
      - ports:
        - port: "9080"
          protocol: TCP
    endpointSelector:
      matchLabels:
        app: reviews-v2
- apiVersion: cilium.io/v2
  kind: CiliumNetworkPolicy
  metadata:
    name: deny-all
    namespace: cks
  spec:
    egress:
    - {}
    endpointSelector: {}
    ingress:
    - {}
kind: List
metadata:
  resourceVersion: ""
